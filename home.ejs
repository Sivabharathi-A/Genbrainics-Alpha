<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Farmer Dashboard</title>
    <link rel="stylesheet" href="farmerstyle.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <script src="script.js" defer></script>
</head>

<body>
    <div id="dashboardSection">
        <header>
            <h1>Farmer Dashboard</h1>
            <div class="user-info" onclick="toggleDropdown()">
                <img src="account.jpg" alt="User" id="userIcon">
                <div class="dropdown" id="userDropdown">
                    <p><strong>Username:</strong> <span id="farmerName">Gayathri R</span></p>
                    <p><strong>Email:</strong> <span id="farmerEmail">gayu@gmail.com</span></p>
                    <p><strong>Location:</strong> <span id="farmerLocation">India</span></p>
                    <button id="signOutButton" onclick="signOut()">Sign Out</button>
                </div>
            </div>
        </header>

        <main>
            <section class="carousel">
                <div class="carousel-inner" id="carouselInner">
                    <div class="carousel-item">
                        <img src="https://wholeharvest.com/cdn/shop/articles/Blog_Banner_-_Whole_Harvest_3_d8ec6712-b908-4227-9d25-d4b55aaa42ae.png?v=1658790163&width=1100" alt="Fresh Vegetables">
                    </div>
                    <div class="carousel-item">
                        <img src="https://foodsafetyhelpline.com/wp-content/uploads/2021/06/fresh-fruits-and-vegetables-UBENQCQ.jpg" alt="Organic Fruits">
                    </div>
                    <div class="carousel-item">
                        <img src="https://images.unsplash.com/photo-1461354464878-ad92f492a5a0?fm=jpg&q=60&w=3000&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8Nnx8b3JnYW5pYyUyMGZvb2R8ZW58MHx8MHx8fDA%3D"
                            alt="Healthy Grains">
                    </div>
                    <div class="carousel-item">
                        <img src="https://watchusgrow.org/wp-content/uploads/2019/08/organic-conventional_opt1_mobile.jpeg" alt="Dairy Products">
                    </div>
                </div>
                <div class="carousel-controls">
                    <button class="carousel-control prev" onclick="prevSlide()">❮</button>
                    <button class="carousel-control next" onclick="nextSlide()">❯</button>
                </div>
            </section>

            <section class="service-section">
                <h2>Our Services</h2>
                <div class="service-grid">
                    <div class="service-card">
                        <i class="fas fa-leaf"></i>
                        <h3>Product Management</h3>
                        <p>Easily add and manage your products.</p>
                    </div>
                    <div class="service-card">
                        <i class="fas fa-truck"></i>
                        <h3>Order Management</h3>
                        <p>View and manage incoming orders.</p>
                    </div>
                    <div class="service-card">
                        <i class="fas fa-chart-line"></i>
                        <h3>Sales Tracking</h3>
                        <p>Track your sales and completed orders.</p>
                    </div>
                    <div class="service-card">
                        <i class="fas fa-comments"></i>
                        <h3>Direct Communication</h3>
                        <p>Chat directly with consumers.</p>
                    </div>
                </div>
            </section>
            <style>
                .product-list h2 {
                  text-align: center;
                }
              
                .orders,
                .products,
                .chat {
                  background: white;
                  padding: 30px;
                  margin: 20px;
                  border-radius: 5px;
                  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
                  text-align: center;
                }
              
                /* Product List Styling */
                .products-grid {
                  gap: 15px;
                  padding: 15px;
                  display: block;
                  text-align: center;
                }
              
                .product-card {
                  width: 250px;
                  height: auto; /* Adjusted height */
                  margin: 10px 10px;
                  background-color: white;
                  border: 1px solid #ccc;
                  padding: 15px; /* Added padding inside the card */
                  border-radius: 8px;
                  box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);
                  display: inline-block;
                  text-align: center;
                  transition: transform 0.2s ease;
                }
              
                .product-card h3 {
                  margin: 10px 0;
                  color: #333;
                }
              
                .product-card p {
                  font-size: 14px;
                  color: #666;
                  margin-bottom: 5px; /* Added some spacing between paragraphs */
                }
              
                .product-card button {
                  padding: 8px 15px;
                  background-color: #dc3545;
                  color: white;
                  border: none;
                  border-radius: 5px;
                  cursor: pointer;
                  font-size: 14px;
                  margin-top: 10px;
                }
              
                .product-card button:hover {
                  background-color: #c82333;
                }
              
                /* Warning Popup Styles */
                .warning-popup-overlay {
                  display: none;
                  position: fixed;
                  top: 0;
                  left: 0;
                  width: 100%;
                  height: 100%;
                  background-color: rgba(0, 0, 0, 0.5);
                  justify-content: center;
                  align-items: center;
                  z-index: 1001;
                }
              
                .warning-popup-content {
                  background-color: white;
                  padding: 20px;
                  border-radius: 8px;
                  box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);
                  text-align: center;
                  width: 400px;
                }
              
                .warning-popup-content h3 {
                  margin-top: 0;
                  margin-bottom: 15px;
                  color: #dc3545;
                }
              
                .warning-popup-content p {
                  margin-bottom: 20px;
                }
              
                .warning-popup-buttons button {
                  padding: 10px 20px;
                  border: none;
                  border-radius: 5px;
                  cursor: pointer;
                  font-weight: bold;
                  background-color: #007bff;
                  color: white;
                  margin: 0 10px;
                }
              
                .warning-popup-buttons button:hover {
                  background-color: #0056b3;
                }
              </style>
              
              <section class="add-product">
                <h2>Add Product</h2>
                <form id="addProductForm">
                  <label for="productName">Product Name:</label>
                  <input type="text" id="productName" name="productName" required>
              
                  <label for="productCategory">Category:</label>
                  <select id="productCategory" name="productCategory" required>
                    <option value="">Select Category</option>
                    <option value="Vegetables">Vegetables</option>
                    <option value="Fruits">Fruits</option>
                    <option value="Grains">Grains</option>
                    <option value="Dairy">Dairy</option>
                  </select>
              
                  <label for="stock">Stock (kg):</label>
                  <input type="number" id="stock" name="stock" required>
              
                  <label for="price">Price (₹):</label>
                  <input type="number" id="price" name="price" required>
              
                  <label for="daysToExpire">Days Until Expiration:</label>
                  <input type="number" id="daysToExpire" name="daysToExpire" required>
              
                  <label for="expectedDeliveryDays">Expected Delivery Days:</label>
                  <input type="number" id="expectedDeliveryDays" name="expectedDeliveryDays" required>
              
                  <label for="expirationDate">Expiration Date:</label>
                  <input type="text" id="expirationDate" name="expirationDate" readonly>
              
                  <button type="submit">Add Product</button>
                </form>
              </section>
              
              <div id="stockExpirationWarning" class="warning-popup-overlay">
                <div class="warning-popup-content">
                  <h3>Inventory Alert!</h3>
                  <p>You have more than 5kg of stock available and the expiration date is nearing (less than 3 days).</p>
                  <p>We recommend considering an offer to move the stock quickly.</p>
                  <div class="warning-popup-buttons">
                    <button id="okButtonWarning">OK</button>
                  </div>
                </div>
              </div>
              
              <section class="product-list">
                <h2>My Products</h2>
                <div id="farmerProducts" class="products-grid"></div>
              </section>
              
              <script>
                document.addEventListener("DOMContentLoaded", function() {
                  updateExpirationDates();
                  displayProducts();
                });
              
                function updateExpirationDates() {
                  let products = JSON.parse(localStorage.getItem("farmerProducts")) || [];
                  let today = new Date();
              
                  products.forEach(product => {
                    let expiration = new Date(product.expirationDate);
                    let diffDays = Math.ceil((expiration - today) / (1000 * 60 * 60 * 24));
                    product.daysToExpire = diffDays > 0 ? diffDays : 0;
                  });
              
                  localStorage.setItem("farmerProducts", JSON.stringify(products));
                  displayProducts();
                }
              
                document.getElementById("daysToExpire").addEventListener("input", function() {
                  const daysToExpire = parseInt(this.value);
                  if (!isNaN(daysToExpire)) {
                    const expirationDate = new Date();
                    expirationDate.setDate(expirationDate.getDate() + daysToExpire);
                    document.getElementById("expirationDate").value = expirationDate.toISOString().split('T')[0];
                  } else {
                    document.getElementById("expirationDate").value = '';
                  }
                });
              
                document.getElementById("addProductForm").addEventListener("submit", function(event) {
                  event.preventDefault();
              
                  const productName = document.getElementById("productName").value;
                  const category = document.getElementById("productCategory").value;
                  const stock = parseFloat(document.getElementById("stock").value);
                  const price = parseFloat(document.getElementById("price").value); // Get the price
                  const daysToExpire = parseInt(document.getElementById("daysToExpire").value);
                  const expectedDeliveryDays = parseInt(document.getElementById("expectedDeliveryDays").value);
                  const expirationDate = document.getElementById("expirationDate").value;
              
                  if (stock > 5 && daysToExpire < 3) {
                    document.getElementById("stockExpirationWarning").style.display = 'flex';
                    // Do not add the product to local storage here, wait for the OK button
                    // You might want to store the product data temporarily if needed
                    sessionStorage.setItem('pendingProduct', JSON.stringify({
                      productName,
                      category,
                      stock,
                      price,
                      daysToExpire,
                      expectedDeliveryDays,
                      expirationDate
                    }));
                  } else {
                    const newProduct = {
                      productName,
                      category,
                      stock,
                      price,
                      daysToExpire,
                      expectedDeliveryDays,
                      expirationDate
                    };
              
                    const products = JSON.parse(localStorage.getItem("farmerProducts")) || [];
                    products.push(newProduct);
                    localStorage.setItem("farmerProducts", JSON.stringify(products));
              
                    updateExpirationDates();
                    displayProducts(); // Immediately display the new product
                    document.getElementById("addProductForm").reset();
                  }
                });
              
                document.getElementById("okButtonWarning").addEventListener("click", function() {
                  document.getElementById("stockExpirationWarning").style.display = 'none';
                  // Retrieve the pending product data
                  const pendingProductData = sessionStorage.getItem('pendingProduct');
                  if (pendingProductData) {
                    const newProduct = JSON.parse(pendingProductData);
                    const products = JSON.parse(localStorage.getItem("farmerProducts")) || [];
                    products.push(newProduct);
                    localStorage.setItem("farmerProducts", JSON.stringify(products));
                    sessionStorage.removeItem('pendingProduct'); // Clear the temporary storage
                    updateExpirationDates();
                    displayProducts(); // Display the product after the user acknowledges the warning
                    document.getElementById("addProductForm").reset();
                  }
                });
              
                setInterval(updateExpirationDates, 86400000);
              
                function displayProducts() {
                  let products = JSON.parse(localStorage.getItem("farmerProducts")) || [];
                  let productContainer = document.getElementById("farmerProducts");
                  productContainer.innerHTML = "";
              
                  if (products.length === 0) {
                    productContainer.innerHTML = "<p>No products added yet.</p>";
                    return;
                  }
              
                  products.forEach((product, index) => {
                    let productElement = document.createElement("div");
                    productElement.classList.add("product-card");
                    productElement.innerHTML = `
                      <h3>${product.productName}</h3>
                      <p>Price: ₹${product.price}</p>
                      <p>Category: ${product.category}</p>
                      <p>Stock: ${product.stock} kg</p>
                      <p>Expires In: ${product.daysToExpire} days</p>
                      <p>Expiration Date: ${product.expirationDate}</p>
                      <button onclick="deleteProduct(${index})">Delete</button>
                    `;
                    productContainer.appendChild(productElement);
                  });
                }
              
                function deleteProduct(index) {
                  let products = JSON.parse(localStorage.getItem("farmerProducts")) || [];
                  products.splice(index, 1);
                  localStorage.setItem("farmerProducts", JSON.stringify(products));
                  displayProducts();
                  updateExpirationDates(); // Update displayed expiration dates after deletion
                }
              </script>
            <!-- <section class="add-product">
                <h2>Add Product</h2>
                <form id="addProductForm">
                    <label for="productName">Product Name:</label>
                    <input type="text" id="productName" name="productName" required>
                
                    <label for="productCategory">Category:</label>
                    <select id="productCategory" name="productCategory" required>
                      <option value="">Select Category</option>
                      <option value="Vegetables">Vegetables</option>
                      <option value="Fruits">Fruits</option>
                      <option value="Grains">Grains</option>
                      <option value="Dairy">Dairy</option>
                    </select>
                    <label for="price">Price:</label>
                    <input type="number" id="price" name="price" required>
                
                    <label for="stock">Stock (kg):</label>
                    <input type="number" id="stock" name="stock" required>
                
                    <label for="daysToExpire">Days Until Expiration:</label>
                    <input type="number" id="daysToExpire" name="daysToExpire" required>
                
                    <label for="expectedDeliveryDays">Expected Delivery Days:</label>
                    <input type="number" id="expectedDeliveryDays" name="expectedDeliveryDays" required>
                
                    <label for="expirationDate">Expiration Date:</label>
                    <input type="text" id="expirationDate" name="expirationDate" readonly>
                
                    <button type="submit">Add Product</button>
                  </form>
            </section> -->

            <!-- <section class="product-list">
                <h2>My Products</h2>
                <div id="farmerProducts" class="products-grid"></div>
            </section> -->
            <section class="orders incoming-orders product-list">
                <h2>Incoming Orders</h2>
                <div id="orderList" class="products-grid">
            
                    <div class="order-item status-processing">
                        <h3>Order #1</h3>
                        <div class="order-details">
                            <p><strong>Customer Name:</strong> Priya Sharma</p>
                            <p><strong>Phone No:</strong> 9743698622</p>
                            <p><strong>Order Type:</strong> Delivery</p>
                            <p><strong>Products:</strong>
                                <ul>
                                    <li>Vegetable: Carrot (2 kg)</li>
                                    <li>Vegetable: Potato (3 kg)</li>
                                </ul>
                            </p>
                        </div>
                        <div class="progress-container">
                            <div class="progress-bar"></div>
                        </div>
                        <span class="progress-label">Processing</span>
                    </div>
            
                    <div class="order-item status-pending">
                        <h3>Order #2</h3>
                        <div class="order-details">
                            <p><strong>Customer Name:</strong> Rohan Verma</p>
                            <p><strong>Phone No:</strong> 9743612345</p>
                            <p><strong>Order Type:</strong> PickUp</p>
                            <p><strong>Products:</strong>
                                <ul>
                                    <li>Vegetable: Tomato (1.5 kg)</li>
                                    <li>Fruit: Mango (2 dozen)</li>
                                </ul>
                            </p>
                        </div>
                        <div class="progress-container">
                            <div class="progress-bar"></div>
                        </div>
                        <span class="progress-label">Pending</span>
                    </div>
            
                    <div class="order-item status-shipped">
                        <h3>Order #3</h3>
                        <div class="order-details">
                            <p><strong>Customer Name:</strong> Sneha Patel</p>
                            <p><strong>Phone No:</strong> 9876598622</p>
                            <p><strong>Order Type:</strong> Delivery</p>
                            <p><strong>Products:</strong>
                                <ul>
                                    <li>Grain: Rice (5 kg)</li>
                                    <li>Vegetable: Onion (1 kg)</li>
                                </ul>
                            </p>
                        </div>
                        <div class="progress-container">
                            <div class="progress-bar"></div>
                        </div>
                        <span class="progress-label">Shipped</span>
                    </div>
            
                    <div class="order-item status-delivered">
                        <h3>Order #4</h3>
                        <div class="order-details">
                            <p><strong>Customer Name:</strong> Karthik Nair</p>
                            <p><strong>Phone No:</strong> 9743654321</p>
                            <p><strong>Order Type:</strong> Delivery</p>
                            <p><strong>Products:</strong>
                                <ul>
                                    <li>Vegetable: Beetroot (1 kg)</li>
                                    <li>Fruit: Banana (1 dozen)</li>
                                </ul>
                            </p>
                        </div>
                        <div class="progress-container">
                            <div class="progress-bar"></div>
                        </div>
                        <span class="progress-label">Delivered</span>
                    </div>
            
                </div>
            </section>

                        <!-- Chatbot Button -->
    <button id="chatbot-button">💬</button>

    <!-- Chatbot Window -->
    <div id="chatbot">
        <div id="chat-header">Chatbot
            <button id="close-btn">✖</button>
        </div>
        <div id="chat-body"></div>
        <input type="text" id="chat-input" placeholder="Type a message...">
        <button id="send-btn">Send</button>
    </div>
            
            <style>
                #chatbot-button {
            position: fixed;
            bottom: 20px;
            right: 20px;
            width: 60px;
            height: 60px;
            background: red;
            color: white;
            border: none;
            border-radius: 50%;
            font-size: 18px;
            font-weight: bold;
            cursor: pointer;
            display: flex;
            align-items: center;
            justify-content: center;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);
        }

        /* Chatbot window (hidden initially) */
        #chatbot {
            position: fixed;
            bottom: 20px;
            right: 20px;
            width: 300px;
            height: 400px;
            background: white;
            border-radius: 8px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
            display: none;
            flex-direction: column;
            border: 1px solid #ccc;
            overflow: hidden;
        }

        /* Chat header */
        #chat-header {
            background: #4CAF50;
            color: white;
            padding: 10px;
            text-align: center;
            font-weight: bold;
            cursor: pointer;
            position: relative;
        }

        /* Close button */
        #close-btn {
            position: absolute;
            right: 10px;
            top: 5px;
            background: red;
            color: white;
            border: none;
            padding: 5px 8px;
            border-radius: 50%;
            font-size: 12px;
            cursor: pointer;
        }

        /* Chat body */
        #chat-body {
            flex: 1;
            padding: 10px;
            overflow-y: auto;
        }

        /* Chat input */
        #chat-input {
            width: 100%;
            padding: 10px;
            border: none;
            border-top: 1px solid #ccc;
        }

        /* Send button */
        #send-btn {
            width: 100%;
            padding: 10px;
            background: #4CAF50;
            color: white;
            border: none;
            cursor: pointer;
        }
            </style>
            
        </main>
        <footer style="background-color: #4CAF50; color: white; padding: 20px 10px; text-align: center; margin-top: 50px;">
            <!-- Copyright -->
            <div>
                <p style="margin-top: 10px;flex: 1;">&copy; 2025 Farmer-Consumer. All Rights Reserved.</p>
            </div>
        </footer>

        <style>
            footer div {
                display: flex;
                justify-content: space-between;
                flex-wrap: wrap;
            }

            footer a {
                text-decoration: none;
                font-size: 18px;
            }

            @media (max-width: 768px) {
                footer div {
                    flex-direction: column;
                    align-items: center;
                    text-align: center;
                }

                footer div>div {
                    width: 100%;
                }
            }
        </style>

        <!-- FontAwesome for Icons -->
        <script src="https://kit.fontawesome.com/a076d05399.js" crossorigin="anonymous"></script>
    </div>

    <script>
        let currentIndex = 0;
        const slides = document.querySelectorAll('.carousel-item');
        const totalSlides = slides.length;

        function showSlide(index) {
            if (index < 0) {
                currentIndex = totalSlides - 1;
            } else if (index >= totalSlides) {
                currentIndex = 0;
            } else {
                currentIndex = index;
            }

            const newTransformValue = -currentIndex * 100 + '%';
            document.getElementById('carouselInner').style.transform = ` translateX(${newTransformValue})  `;
        }

        function nextSlide() {
            showSlide(currentIndex + 1);
        }

        function prevSlide() {
            showSlide(currentIndex - 1);
        }

        setInterval(nextSlide, 5000);
        
        function toggleDropdown() {
            let dropdown = document.getElementById("userDropdown");
            dropdown.style.display = dropdown.style.display === "block" ? "none" : "block";
        }


        function signOut() {
    // Clear session or localStorage
    localStorage.removeItem("farmerLoggedIn");

    // Redirect to the login route that renders your EJS page
    window.location.href = "/login"; // This should match your backend route
}

    //     // Product Handling - Add Product
    //     document.addEventListener("DOMContentLoaded", function () {
    //   updateExpirationDates();
    //   displayProducts();
    // });

    // function updateExpirationDates() {
    //   let products = JSON.parse(localStorage.getItem("farmerProducts")) || [];
    //   let today = new Date();

    //   products.forEach(product => {
    //     let expiration = new Date(product.expirationDate);
    //     let diffDays = Math.ceil((expiration - today) / (1000 * 60 * 60 * 24));
    //     product.daysToExpire = diffDays > 0 ? diffDays : 0;
    //   });

    //   localStorage.setItem("farmerProducts", JSON.stringify(products));
    //   displayProducts();
    // }

    // document.getElementById("daysToExpire").addEventListener("input", function () {
    //   const daysToExpire = parseInt(this.value);
    //   if (!isNaN(daysToExpire)) {
    //     const expirationDate = new Date();
    //     expirationDate.setDate(expirationDate.getDate() + daysToExpire);
    //     document.getElementById("expirationDate").value = expirationDate.toISOString().split('T')[0];
    //   }
    // });

    // document.getElementById("addProductForm").addEventListener("submit", function (event) {
    //   event.preventDefault();

    //   const productName = document.getElementById("productName").value;
    //   const category = document.getElementById("productCategory").value;
    //   const stock = parseFloat(document.getElementById("stock").value);
    //   const price = parseInt(document.getElementById("price").value);
    //   const daysToExpire = parseInt(document.getElementById("daysToExpire").value);
    //   const expectedDeliveryDays = parseInt(document.getElementById("expectedDeliveryDays").value);
    //   const expirationDate = document.getElementById("expirationDate").value;

    //   const newProduct = {
    //     productName,
    //     category,
    //     stock,
    //     price,
    //     daysToExpire,
    //     expectedDeliveryDays,
    //     expirationDate
    //   };
      

    //   const products = JSON.parse(localStorage.getItem("farmerProducts")) || [];
    //   products.push(newProduct);
    //   localStorage.setItem("farmerProducts", JSON.stringify(products));

    //   updateExpirationDates();
    //                 displayProducts(); // Immediately display the new product
    //                 document.getElementById("addProductForm").reset();
                  

    // });

    // setInterval(updateExpirationDates, 86400000);
    //     function displayProducts() {
    //         let products = JSON.parse(localStorage.getItem("farmerProducts")) || [];
    //         let productContainer = document.getElementById("farmerProducts");
    //         productContainer.innerHTML = "";

    //         if (products.length === 0) {
    //             productContainer.innerHTML = "<p>No products added yet.</p>";
    //             return;
    //         }

    //         products.forEach((product, index) => {
    //             let productElement = document.createElement("div");
    //             productElement.classList.add("product-card");
    //             productElement.innerHTML = `
    //                   <h3>${product.productName}</h3>
    //                   <p>Price: ₹${product.price}</p>
    //                   <p>Category: ${product.category}</p>
    //                   <p>Stock: ${product.stock} kg</p>
    //                   <p>Expires In: ${product.daysToExpire} days</p>
    //                   <p>Expiration Date: ${product.expirationDate}</p>
    //                   <button onclick="deleteProduct(${index})">Delete</button>
    //                 `;
    //                 productContainer.appendChild(productElement);
    //               });

    //     }

    //     // Function to Delete a Product
    //     function deleteProduct(index) {
    //         let products = JSON.parse(localStorage.getItem("farmerProducts")) || [];
    //         products.splice(index, 1);
    //         localStorage.setItem("farmerProducts", JSON.stringify(products));
    //         displayProducts();
    //    }

        // Load products on page load
        document.addEventListener("DOMContentLoaded", displayProducts);
        // function displayIncomingOrders() {
        //     let orders = JSON.parse(localStorage.getItem("orders")) || [];
        //     let orderList = document.getElementById("orderList");  // Correct ID here
        //     orderList.innerHTML = "";

        //     // Filter orders for the logged-in farmer (using the hardcoded name for now)
        //     let farmerOrders = orders.filter(order => order.farmerName === "John Doe"); // Use actual farmer name

        //     if (farmerOrders.length === 0) {
        //         orderList.innerHTML = "<p>No incoming orders.</p>";
        //         return;
        //     }

        //     farmerOrders.forEach((order, index) => {
        //         let orderElement = document.createElement("div");
        //         orderElement.classList.add("order");
        //         orderElement.innerHTML = `
        //             <p><strong>Order ID:</strong> ${order.orderId}</p>
        //             <p><strong>Customer:</strong> ${order.customerName}</p>
        //             <p><strong>Product:</strong> ${order.productName}</p>
        //             <p><strong>Quantity:</strong> ${order.quantity}</p>
        //             <p><strong>Price:</strong> ₹${order.price}</p>
        //             <p><strong>Status:</strong> <span id="orderStatus${order.orderId}">Pending</span></p>
        //             <button onclick="completeOrder('${order.orderId}')">Complete Order</button>
        //         `;
        //         orderList.appendChild(orderElement);
        //     });
        //}
        // function completeOrder(orderId) {
        //     let orders = JSON.parse(localStorage.getItem("orders")) || [];
        //     let orderIndex = orders.findIndex(order => order.orderId === orderId);

        //     if (orderIndex !== -1) {
        //         orders[orderIndex].status = "Completed"; // Update order status
        //         localStorage.setItem("orders", JSON.stringify(orders));

        //         // Move order to completed orders section (optional, you can just update status)
        //         let completedOrder = orders.splice(orderIndex, 1)[0]; //remove from incoming
        //         let completedOrders = JSON.parse(localStorage.getItem("completedOrders")) || [];
        //         completedOrders.push(completedOrder);
        //         localStorage.setItem("completedOrders", JSON.stringify(completedOrders));

        //         localStorage.setItem("orders", JSON.stringify(orders)); // Save changes

        //         displayIncomingOrders(); // Refresh incoming orders list
        //         displayCompletedOrders();
        //         // Update the status text directly
        //         let statusSpan = document.getElementById(`orderStatus${orderId}`);
        //         if (statusSpan) {
        //             statusSpan.textContent = "Completed";
        //         }

        //     }
        // }
        // function displayCompletedOrders() {
        //     let completedOrders = JSON.parse(localStorage.getItem("completedOrders")) || [];
        //     let completedOrdersContainer = document.getElementById("completedOrders");
        //     completedOrdersContainer.innerHTML = "";

        //     // Filter completed orders for the logged-in farmer
        //     let farmerCompletedOrders = completedOrders.filter(order => order.farmerName === "John Doe");

        //     if (farmerCompletedOrders.length === 0) {
        //         completedOrdersContainer.innerHTML = "<p>No completed orders.</p>";
        //         return;
        //     }

        //     farmerCompletedOrders.forEach(order => {
        //         let orderElement = document.createElement("div");
        //         orderElement.classList.add("order");
        //         orderElement.innerHTML = `
        //             <p><strong>Order ID:</strong> ${order.orderId}</p>
        //             <p><strong>Customer:</strong> ${order.customerName}</p>
        //             <p><strong>Product:</strong> ${order.productName}</p>
        //             <p><strong>Quantity:</strong> ${order.quantity}</p>
        //             <p><strong>Price:</strong> ₹${order.price}</p>
        //             <p><strong>Status:</strong> Completed</p>
        //         `;
        //         completedOrdersContainer.appendChild(orderElement);
        //     });
        // }

        // // Load orders on page load
        // document.addEventListener("DOMContentLoaded", () => {
        //     displayIncomingOrders();
        //     displayCompletedOrders();
        // });
        function sendMessage() {
            let chatBox = document.getElementById("chatBox");
            let chatInput = document.getElementById("chatInput");
            let message = chatInput.value.trim();
            if (message !== "") {
                let msgElement = document.createElement("p");
                msgElement.textContent = "Farmer: " + message;
                chatBox.appendChild(msgElement);
                chatInput.value = "";
            }
        }
    </script>

    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Poppins', sans-serif;
        }

        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
            background: #f4f4f4;
        }

        .carousel {
            position: relative;
            width: 100%;
            margin: 20px auto;
            overflow: hidden;
            border-radius: 8px;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
        }

        .carousel-inner {
            display: flex;
            transition: transform 0.5s ease-in-out;
        }

        .carousel-item {
            min-width: 100%;
            flex: 1 0 auto;
            text-align: center;
            padding: 20px;
            box-sizing: border-box;
        }

        .carousel-item img {
            width: 100%;
            max-height: 400px;
            object-fit: cover;
            border-radius: 8px;
        }

        .carousel-item h3 {
            font-size: 24px;
            margin-top: 10px;
            color: #333;
        }

        .carousel-item p {
            font-size: 16px;
            color: #555;
        }

        .carousel-controls {
            position: absolute;
            top: 50%;
            left: 0;
            right: 0;
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 0 10px;
        }

        .carousel-control {
            background-color: rgba(0, 0, 0, 0.5);
            color: white;
            border: none;
            padding: 10px 15px;
            border-radius: 50%;
            cursor: pointer;
            font-size: 20px;
            transition: background-color 0.3s ease;
        }

        .carousel-control:hover {
            background-color: rgba(0, 0, 0, 0.7);
        }

        .service-section {
            text-align: center;
            padding: 20px;
            background-color: #f8f8f8;
            margin-top: 50px;
            border-radius: 8px;
        }

        .service-section h2 {
            font-size: 28px;
            margin-bottom: 20px;
            color: #2c3e50;
        }

        .service-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 60px;
            margin-top: 30px;
        }

        .service-card {
            background: #ffffff;
            padding: 20px;
            border-radius: 12px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            transition: transform 0.3s ease, box-shadow 0.3s ease;
            text-align: left;
            height: 100%;

            display: flex;
            flex-direction: column;
            justify-content: space-between;
        }

        .service-card:hover {
            transform: translateY(-10px);
            box-shadow: 0 6px 16px rgba(0, 0, 0, 0.15);
        }


        .service-card h3 {
            font-size: 20px;
            margin-bottom: 12px;
            color: black;
        }

        .service-card p {
            font-size: 16px;
            color: #666;
            line-height: 1.6;
            margin-bottom: 12px;
        }

        .service-card i {
            font-size: 40px;
            margin-bottom: 15px;
            color: #4CAF50;
        }

        /* Header */
        header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            background: #4CAF50;
            color: white;
            padding: 15px 20px;
        }

        h1 {
            margin: 0;
        }

        #completedOrders {

            gap: 15px;
            padding: 15px;
        }

        .user-info {
            position: relative;
            cursor: pointer;
        }

        #userIcon {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            object-fit: cover;
        }

        .dropdown {
            display: none;
            position: absolute;
            top: 50px;
            right: 0;
            background: white;
            color: #333;
            padding: 10px 20px;
            border-radius: 5px;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
            z-index: 1;
            width: 200px;
        }

        .dropdown p {
            margin: 5px 0;
        }

        #signOutButton {
            margin-top: 10px;
            padding: 8px 15px;
            background-color: #f44336;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            transition: background-color 0.3s ease;
        }

        #signOutButton:hover {
            background-color: #d32f2f;
        }

        .product-list h2 {
            text-align: center;
        }

        .orders,
        .products,
        .chat {
            background: white;
            padding: 30px;
            margin: 20px;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            text-align: center;
        }

        /* Product List Styling */
        .products-grid {
            gap: 15px;
            padding: 15px;
            display: block;
            text-align: center;
        }

        .product-card {
            width: 250px;
            height: relative;
            margin: 10px 10px;
            background-color: white;
            border: 1px solid #ccc;
            padding-top: 10px;
            padding-bottom: 5%;
            border-radius: 8px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);
            display: inline-block;
            text-align: center;
            transition: transform 0.2s ease;
        }

        .product-card h3 {
            margin: 10px 0;
            color: #333;
        }

        .product-card p {
            font-size: 14px;
            color: #666;
        }

        .incoming-orders {
            border-left: 5px solid #ff9800;
        }
        /* Style for the main orders section */
 /* Style for the main orders section */
 .orders.incoming-orders.product-list {
            margin-bottom: 30px;
        }

        /* Style for the heading */
        .orders.incoming-orders.product-list h2 {
            color: #333;
            border-bottom: 2px solid #5cb85c;
            padding-bottom: 10px;
            margin-bottom: 20px;
        }

        /* Style for the products grid container */
        .orders.incoming-orders.product-list #orderList.products-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 20px;
            background: #fff;
            padding: 15px;
            border-radius: 8px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }

        /* Style for each individual order item */
        .orders.incoming-orders.product-list #orderList.products-grid .order-item {
            background-color: #fff;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            border: 1px solid #ddd;
        }

        /* Style for the order item heading (Order #) */
        .orders.incoming-orders.product-list #orderList.products-grid .order-item h3 {
            color: #337ab7;
            margin-top: 0;
            margin-bottom: 10px;
            font-size: 1.5em;
        }

        /* Style for the order details container */
        .orders.incoming-orders.product-list #orderList.products-grid .order-item .order-details p {
            margin-bottom: 8px;
            color: #555;
            line-height: 1.6;
        }

        /* Style for bold text within order details */
        .orders.incoming-orders.product-list #orderList.products-grid .order-item .order-details strong {
            font-weight: bold;
            color: #333;
        }

        /* Style for the progress container */
        .orders.incoming-orders.product-list #orderList.products-grid .order-item .progress-container {
            background-color: #e9ecef;
            border-radius: 5px;
            height: 10px;
            margin-top: 15px;
            overflow: hidden;
        }

        /* Style for the progress bar */
        .orders.incoming-orders.product-list #orderList.products-grid .order-item .progress-bar {
            background-color: #5cb85c;
            height: 100%;
            border-radius: 5px;
            width: 0%; /* Will be updated based on status */
            transition: width 0.5s ease-in-out;
        }

        /* Style for the progress label */
        .orders.incoming-orders.product-list #orderList.products-grid .order-item .progress-label {
            display: block;
            margin-top: 5px;
            font-size: 1em;
            font-weight: bold;
            color: #444;
            text-align: right;
        }

        /* Specific progress statuses */
        .orders.incoming-orders.product-list #orderList.products-grid .order-item.status-pending .progress-bar {
            background-color: #f0ad4e;
            width: 25%;
        }

        .orders.incoming-orders.product-list #orderList.products-grid .order-item.status-processing .progress-bar {
            background-color: #007bff;
            width: 50%;
        }

        .orders.incoming-orders.product-list #orderList.products-grid .order-item.status-shipped .progress-bar {
            background-color: #6c757d;
            width: 75%;
        }

        .orders.incoming-orders.product-list #orderList.products-grid .order-item.status-delivered .progress-bar {
            background-color: #28a745;
            width: 100%;
        }

        /* Mobile Optimization */
        @media (max-width: 600px) {
            .orders.incoming-orders.product-list #orderList.products-grid {
                grid-template-columns: 1fr;
            }
        }
         /* Warning Popup Styles */
  .warning-popup-overlay {
    display: none;
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.5);
    justify-content: center;
    align-items: center;
    z-index: 1001;
  }


        .warning-popup-content {
    background-color: white;
    padding: 20px;
    border-radius: 8px;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);
    text-align: center;
    width: 400px;
  }

  .warning-popup-content h3 {
    margin-top: 0;
    margin-bottom: 15px;
    color: #dc3545;
  }

  .warning-popup-content p {
    margin-bottom: 20px;
  }

  .warning-popup-buttons button {
    padding: 10px 20px;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    font-weight: bold;
    background-color: #007bff;
    color: white;
    margin: 0 10px;
  }

  .warning-popup-buttons button:hover {
    background-color: #0056b3;
  }

    </style>
</body>
<script>
   const chatbotButton = document.getElementById("chatbot-button");
        const chatbot = document.getElementById("chatbot");
        const closeButton = document.getElementById("close-btn");

        // Show chatbot when button is clicked
        chatbotButton.addEventListener("click", () => {
            chatbot.style.display = "flex";
            chatbotButton.style.display = "none"; // Hide button when expanded
        });

        // Hide chatbot when close button is clicked
        closeButton.addEventListener("click", () => {
            chatbot.style.display = "none";
            chatbotButton.style.display = "flex"; // Show button again
        });

        // Sending message
        document.getElementById("send-btn").addEventListener("click", async function () {
            let input = document.getElementById("chat-input");
            let message = input.value.trim();
            if (!message) return;

            appendMessage("You: " + message, "user");

            // Send message to backend
            const response = await fetch("http://localhost:5500/api/chatbot", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({ message })
            });

            const data = await response.json();
            appendMessage("Bot: " + data.reply, "bot");
            input.value = "";
        });

        function appendMessage(text, sender) {
            let chatBody = document.getElementById("chat-body");
            let msg = document.createElement("div");
            msg.textContent = text;
            msg.style.padding = "8px";
            msg.style.margin = "5px 0";
            msg.style.borderRadius = "5px";
            msg.style.background = sender === "user" ? "#d1ffd1" : "#f1f1f1";
            chatBody.appendChild(msg);
            chatBody.scrollTop = chatBody.scrollHeight;
        }

</script>
</html>
